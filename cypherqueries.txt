//Tüm düğümleri ve ilişkilerini silmek için
MATCH (n) DETACH DELETE n;

// Mevcut kısıtlamalar varsa kaldırmak için
DROP CONSTRAINT Ingredient_id IF EXISTS;
DROP CONSTRAINT Flavor_id IF EXISTS;
DROP CONSTRAINT Technique_id IF EXISTS;
DROP CONSTRAINT Recipe_id IF EXISTS;

// -------- YENİ KISITLAMALARI OLUŞTURMA KISMI --------
// Her node tipi için unique id kısıtlaması

CREATE CONSTRAINT Ingredient_id IF NOT EXISTS
FOR (x:Ingredient)
REQUIRE x.id IS UNIQUE;

CREATE CONSTRAINT Flavor_id IF NOT EXISTS
FOR (x:Flavor)
REQUIRE x.id IS UNIQUE;

CREATE CONSTRAINT Technique_id IF NOT EXISTS
FOR (x:Technique)
REQUIRE x.id IS UNIQUE;

CREATE CONSTRAINT Recipe_id IF NOT EXISTS
FOR (x:Recipe)
REQUIRE x.id IS UNIQUE;

// -------- NODE'LARI YÜKLEME KISMI --------

// Malzemeleri Yükleme 
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/Buse-ng/neo4j-build-model/refs/heads/main/csvFiles/ingredients.csv' AS row
MERGE (i:Ingredient {id: row.id})
SET
  i.name = row.name,
  i.category = row.category;

// Lezzetleri Yükleme 
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/Buse-ng/neo4j-build-model/refs/heads/main/csvFiles/flavors.csv' AS row
MERGE (f:Flavor {id: row.id})
SET
  f.name = row.name;

// Teknikleri Yükleme 
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/Buse-ng/neo4j-build-model/refs/heads/main/csvFiles/techniques.csv' AS row
MERGE (t:Technique {id: row.id})
SET
  t.name = row.name;

// Tarifleri Yükleme 
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/Buse-ng/neo4j-build-model/refs/heads/main/csvFiles/recipes.csv' AS row
MERGE (r:Recipe {id: row.id})
SET
  r.name = row.name,
  r.difficulty = row.difficulty,
  r.time_minutes = toFloat(row.time_minutes);


// -------- İLİŞKİLERİ YÜKLEME KISMI--------

// CONTAINS İlişkilerini Yüklemek için (Recipe -> Ingredient)
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/Buse-ng/neo4j-build-model/refs/heads/main/csvFiles/contains.csv' AS row
MATCH (recipe:Recipe {id: row.start_node})
MATCH (ingredient:Ingredient {id: row.end_node})
MERGE (recipe)-[:CONTAINS]->(ingredient);

// HAS_FLAVOR İlişkilerini Yüklemek için (Recipe -> Flavor)
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/Buse-ng/neo4j-build-model/refs/heads/main/csvFiles/has_flavor.csv' AS row
MATCH (recipe:Recipe {id: row.start_node})
MATCH (flavor:Flavor {id: row.end_node})
MERGE (recipe)-[:HAS_FLAVOR]->(flavor);

// USES_TECHNIQUE İlişkilerini Yüklemek için (Recipe -> Technique)
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/Buse-ng/neo4j-build-model/refs/heads/main/csvFiles/uses_technique.csv' AS row
MATCH (recipe:Recipe {id: row.start_node})
MATCH (technique:Technique {id: row.end_node})
MERGE (recipe)-[:USES_TECHNIQUE]->(technique);

// CAN_REPLACE İlişkilerini Yüklemek için (Ingredient -> Ingredient)
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/Buse-ng/neo4j-build-model/refs/heads/main/csvFiles/can_replace.csv' AS row
MATCH (ingredient1:Ingredient {id: row.start_node})
MATCH (ingredient2:Ingredient {id: row.end_node})
MERGE (ingredient1)-[:CAN_REPLACE]->(ingredient2);

// ------ LABELS KISMI ------
// Tatlı lezzetine sahip tariflere "SweetDish" etiketi ekledim
MATCH (r:Recipe)-[:HAS_FLAVOR]->(f:Flavor {name: "Tatlı"})
WITH DISTINCT r SET r:SweetDish;

// Kremamsı lezzetine sahip tariflere "CreamyDish" etiketi ekledim
MATCH (r:Recipe)-[:HAS_FLAVOR]->(f:Flavor {name: "Kremamsı"})
WITH DISTINCT r SET r:CreamyDish;

// Başka bir malzemenin yerine kullanılabilen malzemelere "Substitute" etiketi ekledim
MATCH (i:Ingredient)-[:CAN_REPLACE]->()
WITH DISTINCT i SET i:Substitute;